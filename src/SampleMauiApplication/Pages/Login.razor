@page "/login"
@using SampleMauiApplication.Models
@using SampleMauiApplication.Services
@inject NavigationManager Navigation;
@inject CustomAuthenticationStateProvider AuthStateProvider;
@inject AuthenticatingService authService;

<h1 style="text-align:center">Log in</h1>
<div class="container">
    <section>
        <hr />
        <p>
            <button class="btn btn-primary login-facebook" @onclick=LoginFacebook>Facebook Login</button>
            <button class="btn btn-primary login-google" @onclick=LoginGoogle>Google Login</button>
            <button class="btn btn-primary login-apple" @onclick=LoginApple>Apple Login</button>
            <button class="btn btn-primary login-email" @onclick=LoginEmail>Email Login</button>

        </p>
    </section>
</div>

@code {
    //public string ErrorMessage { get; set; }

    private async Task LoginFacebook()
    {
        await DoLogin("Facebook");
    }
    private async Task LoginGoogle()
    {
        await DoLogin("Google");
    }
    private async Task LoginApple()
    {
        await DoLogin("Apple");
    }
    private void LoginEmail()
    {
        Navigation.NavigateTo("/LoginEmail");
    }

    private async Task DoLogin(string scheme)
    {
        //Valiate user acount
        var jwtToken = await authService.OnAuthenticate(scheme);

        //Not successful, don't need to do anything
        if (String.IsNullOrEmpty(jwtToken))
            return;

        //Call login and recirect
        await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo(""); //Root URL
    }
}
